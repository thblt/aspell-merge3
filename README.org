#+TITLE: Three-way merge for aspell custom dictionaries

This is a very simple merge program for aspell custom dictionaries
(=.pws= files).  It is meant for people who sync their aspell dicts
over multiple computers using with a vcs or some cloud service.
Regular merge programs are easily confused by aspell files, who are
just an unordered list with a standard header.

* Building and installation

Compilation requires only `cabal` (usually packaged as =cabal-install=
or =haskell-cabal=) and is as simple as:

#+begin_example
$ git clone https://github.com/thblt/aspell-merge3
$ cd aspell-merge3
$ cabal build
#+end_example

* Usage

Just as simple.  Pass three paths, starting with the common ancestor,
and =aspell-merge3= will produce a new dictionary file, either to
=sdtout= (the default) or to a location passed to the =--output=, =-o=
arg.

#+begin_example
$ aspell-merge3 original modifiedA modifiedB --output combined
#+end_example

* Algorithm

Nothing fancy here. Given three sets of words, one from the ancestor
(O), and two from variants we need to merge (A and B), words that
match at least one of these conditions are added to the output:

 1. The word present in both A and B.
 2. The word is present in *either* A or B, and not in O.

Rule 1 is the obvious case where there's no conflict: either the word
was added on both sides, or it was already in O --- we don't need to
care.  Rule 2 is for words that have been added to one of the sides.
The extra condition in that rule, that the word is absent from O, is
to propagate deletions: a word present in O, but not in both A and B,
has been /deleted/ on one side and that deletion must be propagated to
the final result.

In other words, the result of the merge is:

#+begin_example
  (A∩B)  ∪ (AΔB)\O
  -----    -------
  Rule 1   Rule 2

(Δ is symmetric difference. AΔB == A∪B\A∩B)
#+end_example

* Usage with git

In your global or user git config (often =~/.config/git/config=), add
the following lines:

#+begin_src ini
[merge "aspell-merge3"]
  name = A merge driver for aspell custom dictionaries.
  driver = aspell-merge3 %O %A %B --output %A
#+end_src ini

then, in your repo's =.gitattributes= (creating it if needed)

#+begin_src ini
*.pws merge=aspell-merge3
#+end_src ini
